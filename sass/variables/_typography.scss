@use "sass:map";
@import "../mixins/_mixins";

:root {
  // Font Families
  --ff-primary: 'Galaxie Copernicus', georgia, serif;
  --ff-secondary: 'Graphik', arial, sans-serif;
  --ff-utility: 'Graphik', arial, sans-serif;
  --ff-header: var(--ff-primary);
  --ff-body: var(--ff-utility);

  // Font Weight
  --fw-light: 300;
  --fw-normal: 400;
  --fw-medium: 500;
  --fw-bold: 700;
  --fw-heading: 500;
  --fw-body: var(--fw-normal);

  // Line Height
  --lh-body: 1.5;

  // Mobile and Tablet.
  --fs-h1: 2rem;     // 32px
  --fs-h2: 1.75rem;  // 28px
  --fs-h3: 1.625rem; // 26px
  --fs-h4: 1.5rem;   // 24px
  --fs-h5: 1.25rem;  // 20px
  --fs-h6: 1.125rem; // 18px

  // Body Font Size
  --fs-p00: 1.25rem; // 20px
  --fs-p0: 1.125rem; // 18px
  --fs-p1: 1rem;     // 16px
  --fs-p2: 1rem;     // 16px
  --fs-p3: 0.875rem;  // 14px
  --fs-p4: 0.75rem;  // 12px
}

//Tablet Overrides
@media all and (width >= 768px) {
  :root {
    --fs-p1: 1.25em;
  }
}

// Desktop Overrides
@media all and (width >= 1024px) {
  :root {
    --fs-h1: 3rem;     // 48px
    --fs-h2: 2.5rem;   // 40px
    --fs-h3: 2.25rem;  // 36px
    --fs-h4: 1.75rem;  // 28px
    --fs-h5: 1.5rem;   // 24px
    --fs-h6: 1.25rem;  // 20px
  }
}

/**
 * Typography list from Figma.
 *
 * A nested array by type and size. There can be a "default" size which will be
 * applied to all sizes.
 */
$typography: (
  display: (
    default: (
      font-family: 'Galaxie',
    ),
    xl: (
      font-size: 68px,
      line-height: 76px,
      letter-spacing: -2.25px,
      breakpoints: (
        sm: (
          font-size: 42px,
          line-height: 56px,
        ),
      ),
    ),
    lg: (
      font-size: 64px,
      line-height: 72px,
      letter-spacing: -2px,
      breakpoints: (
        sm: (
          font-size: 36px,
          line-height: 48px,
        ),
      )
    ),
    md: (
      font-size: 54px,
      line-height: 62px,
      letter-spacing: -1.75px,
      breakpoints: (
        sm: (
          font-size: 36px,
          line-height: 48px,
        ),
      )
    ),
    sm: (
      font-size: 48px,
      line-height: 56px,
      letter-spacing: -1.5px,
      breakpoints: (
        sm: (
          font-size: 36px,
          line-height: 48px,
        ),
      )
    ),
  ),
  heading: (
    default: (
      font-family: 'Galaxie',
    ),
    xl: (
      font-size: 40px,
      line-height: 52px,
      breakpoints: (
        sm: (
          font-size: 20px,
          line-height: 24px,
        ),
      )
    ),
    lg: (
      font-size: 40px,
      line-height: 52px,
      breakpoints: (
        sm: (
          font-size: 20px,
          line-height: 24px,
        ),
      )
    ),
    md: (
      font-size: 40px,
      line-height: 52px,
      breakpoints: (
        sm: (
          font-size: 20px,
          line-height: 24px,
        ),
      )
    ),
    sm: (
      font-size: 40px,
      line-height: 52px,
      breakpoints: (
        sm: (
          font-size: 20px,
          line-height: 24px,
        ),
      )
    ),
    xs: (
      font-size: 40px,
      line-height: 52px,
      breakpoints: (
        sm: (
          font-size: 20px,
          line-height: 24px,
        ),
      )
    ),
  ),
  body: (
    default: (
      font-family: 'Graphik',
    ),
    xl: (
      font-size: 20px,
      line-height: 28px,
    ),
    lg: (
      font-size: 18px,
      line-height: 26px,
    ),
    md: (
      font-size: 16px,
      line-height: 24px,
    ),
    sm: (
      font-size: 14px,
      line-height: 20px,
    ),
  ),
);

/**
 * @param $type
 *   Type, e.g. "display", "heading", "body".
 *
 * @param $size
 *   Size, e.g. "xl", "lg", "xs".
 */
@mixin text($type, $size) {
  $size: map.get(map.get($typography, $type), $size);

  @each $prop, $value in $size {
    @if ($prop != 'breakpoints') {
      #{$prop}: #{$value};
    }
  }

  @if (map.has-key($size, 'breakpoints')) {
    $bp_props: map.get($size, 'breakpoints');

    // Add more as we need them.
    @media (min-width: map-get($breakpoints, 'sm')) {
      @each $bp_prop, $bp_value in map.get($bp_props, 'sm') {
        #{$bp_prop}: #{$bp_value};
      }
    }
  }

}

// Creates a class for each combination in $typography map
// .text-heading-lg
// .text-display-xl
// .text-heading-xl-it
@each $category, $sizes in $typography {
  @each $size, $css in $sizes {
    @if ($size != 'default') {
      .text-#{$category}-#{$size} {
        @include text($category, 'default');
        @include text($category, $size);
      }
      .text-#{$category}-#{$size}-it {
        @include text($category, 'default');
        @include text($category, $size);
        font-style: italic;
      }
    }
  }
}

// Body class is the same as "md" just without the key.
.text-body {
  @include text('body', 'md');
}

.text-utility-eyebrow {
  @include text('body', 'md');
  font-weight: var(--fw-medium);
  letter-spacing: 1.75px;
}

.text-utility-link {
  @include text('body', 'md');
  font-weight: var(--fw-medium);
  font-style: italic;
  text-decoration: underline;
}

.text-utility-link-sm {
  @include text('body', 'sm');
  font-style: italic;
  text-decoration: underline;
}

.text-utility-link-standalone {
  @include text('body', 'sm');
  font-weight: var(--fw-medium);
  text-decoration: underline;
}

.text-utility-button {
  @include text('body', 'sm');
  font-size: 14px;
  line-height: 20px;
}

.text-utility-legal {
  @include text('body', 'md');
  font-size: 12px;
  line-height: 18px;
}
