@use "sass:map";

////
/// Icons
/// @group utility
////

$icon-font-name: 'icomoon' !default;
$icon-font-dir: '../assets/fonts/icomoon/fonts/' !default;
$icons-enabled: false;

@mixin themekit-icons() {

  %icon-base {
    /* stylelint-disable font-family-no-missing-generic-family-keyword */
    font-family: $icon-font-name;
    font-style: normal;
    font-weight: normal;
    speak: none;
    display: inline-block;
    text-decoration: inherit;
    width: 1em;
    text-align: center;

    // For safety - reset parent styles, that can break glyph codes
    font-variant: normal;
    text-transform: none;

    // Ensure consistent height
    line-height: 1;
  }

  $icons-enabled: true !global;
}


$icons: () !default;

/// Add a font icon. This must be used in a before or after pseudo class
@mixin icon($icon, $replace: false, $map: $icons) {
  @if  map.has-key($map, $icon) {
    $icon: map.get($map, $icon);
  }

  @if  $replace == false {
    @extend %icon-base;
  }

  content: '#{$icon}';
}

/// Add an icon to the before pseudo class
@mixin icon-before($icon, $replace: false) {
  &::before {
    @content;
    @include icon($icon, $replace);
  }
}

/// Add an icon to the after pseudo class
@mixin icon-after($icon, $replace: false) {
  &::after {
    @content;
    @include icon($icon, $replace);
  }
}

/// Replace text with icon
@mixin replace-text-with-icon($icon, $font-size: $global-font-size) {
  font-size: 0;
  text-decoration: none;

  @include icon-before($icon) {
    font-size: $font-size;

    @content;
  }
}

// Info Icon.
// Pass in dark for a white fill.
// $inverted == false: transparent icon with $theme border
// $inverted == true: $theme filled icon
@mixin icon-info-circle($theme: default, $inverted: false) {
  $fill: #1F1A5E;

  @if $theme == dark {
    $fill: #fff;
  } @else if $theme == orchid {
    $fill: #B113C0;
  }

  $default-svg: '<svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none"> <path fill-rule="evenodd" clip-rule="evenodd" d="M7 12.61C10.0983 12.61 12.61 10.0983 12.61 7C12.61 3.90168 10.0983 1.39 7 1.39C3.90168 1.39 1.39 3.90168 1.39 7C1.39 10.0983 3.90168 12.61 7 12.61ZM7 13.375C10.5208 13.375 13.375 10.5208 13.375 7C13.375 3.47918 10.5208 0.625 7 0.625C3.47918 0.625 0.625 3.47918 0.625 7C0.625 10.5208 3.47918 13.375 7 13.375Z" fill="#{$fill}"/> <path d="M6.5125 5.96875C6.5125 5.70987 6.72237 5.5 6.98125 5.5C7.24013 5.5 7.45 5.70987 7.45 5.96875V9.53125C7.45 9.79013 7.24013 10 6.98125 10C6.72237 10 6.5125 9.79013 6.5125 9.53125V5.96875Z" fill="#{$fill}"/> <path d="M7.45 4.46875C7.45 4.72763 7.24013 4.9375 6.98125 4.9375C6.72237 4.9375 6.5125 4.72763 6.5125 4.46875C6.5125 4.20987 6.72237 4 6.98125 4C7.24013 4 7.45 4.20987 7.45 4.46875Z" fill="#{$fill}"/> </svg>';
  $inverted-svg: '<svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none"> <path fill-rule="evenodd" clip-rule="evenodd" d="M7 13.375C10.5208 13.375 13.375 10.5208 13.375 7C13.375 3.47918 10.5208 0.625 7 0.625C3.47918 0.625 0.625 3.47918 0.625 7C0.625 10.5208 3.47918 13.375 7 13.375ZM6.98132 4.9375C7.24021 4.9375 7.45007 4.72763 7.45007 4.46875C7.45007 4.20987 7.24021 4 6.98132 4C6.72244 4 6.51257 4.20987 6.51257 4.46875C6.51257 4.72763 6.72244 4.9375 6.98132 4.9375ZM6.98132 5.5C6.72244 5.5 6.51257 5.70987 6.51257 5.96875V9.53125C6.51257 9.79013 6.72244 10 6.98132 10C7.24021 10 7.45007 9.79013 7.45007 9.53125V5.96875C7.45007 5.70987 7.24021 5.5 6.98132 5.5Z" fill="#{$fill}"/> </svg>';

  &::after {
    background-image: svg-url($default-svg);
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center center;
    content: '';
    font-size: 0;
    text-decoration: none;
    display: inline-block;
    height: 0.875rem;
    margin-left: 0.25rem;
    width: 0.875rem;
  }

  &:hover::after {
    background-image: svg-url($inverted-svg);
  }

  @if $inverted == true {
    &::after {
      background-image: svg-url($inverted-svg);
    }
  }
}
